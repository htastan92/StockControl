<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCABxAHEDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9
        /KKKKACq+oalFpkPmTOqL6k9and9i5r4G/4Kt/8ABQGP9nXwndQ2106TKDGiK2GYn5Qo+pI+nXoCaipU
        jTi5zdktWVThKclCKu3oj7E1r9oDwxoblZtSttw7eYK5q/8A2yPBdhKVbVLc+/nKM1+Bkv7bPivx9qD3
        F7qki+YSQkUrqFBOcdef5e1V9Z8Z634kgaSHXNRVj/BG+z9RX51jPFHKsPPklTqPz5Ul+Mr/AIH2uH4C
        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
        KKKACiiigAooooAKKKKACiiigD//2Q==
</value>
  </data>
</root>